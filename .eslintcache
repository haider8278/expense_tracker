[{"E:\\react-apps\\expense_tracker\\src\\index.js":"1","E:\\react-apps\\expense_tracker\\src\\App.js":"2","E:\\react-apps\\expense_tracker\\src\\components\\Details\\Details.jsx":"3","E:\\react-apps\\expense_tracker\\src\\components\\Details\\styles.js":"4","E:\\react-apps\\expense_tracker\\src\\styles.js":"5","E:\\react-apps\\expense_tracker\\src\\components\\Main\\Main.jsx":"6","E:\\react-apps\\expense_tracker\\src\\components\\Main\\styles.js":"7","E:\\react-apps\\expense_tracker\\src\\components\\Main\\Form\\styles.js":"8","E:\\react-apps\\expense_tracker\\src\\components\\Main\\List\\List.jsx":"9","E:\\react-apps\\expense_tracker\\src\\components\\Main\\List\\styles.js":"10","E:\\react-apps\\expense_tracker\\src\\context\\context.js":"11","E:\\react-apps\\expense_tracker\\src\\context\\contextReducer.js":"12","E:\\react-apps\\expense_tracker\\src\\constants\\categories.js":"13","E:\\react-apps\\expense_tracker\\src\\utils\\formatDate.js":"14","E:\\react-apps\\expense_tracker\\src\\useTransactions.js":"15","E:\\react-apps\\expense_tracker\\src\\components\\SnackBar\\styles.js":"16","E:\\react-apps\\expense_tracker\\src\\components\\SnackBar\\CustomizedSnackbar.jsx":"17","E:\\react-apps\\expense_tracker\\src\\components\\Main\\Form\\NewTransactionForm.jsx":"18","E:\\react-apps\\expense_tracker\\src\\components\\InfoCard.jsx":"19"},{"size":506,"mtime":1609239119428,"results":"20","hashOfConfig":"21"},{"size":1359,"mtime":1609239473444,"results":"22","hashOfConfig":"21"},{"size":721,"mtime":1608625422054,"results":"23","hashOfConfig":"21"},{"size":245,"mtime":1608555640223,"results":"24","hashOfConfig":"21"},{"size":750,"mtime":1609241293030,"results":"25","hashOfConfig":"21"},{"size":1435,"mtime":1608639161706,"results":"26","hashOfConfig":"21"},{"size":512,"mtime":1608555609830,"results":"27","hashOfConfig":"21"},{"size":245,"mtime":1608556437976,"results":"28","hashOfConfig":"21"},{"size":1424,"mtime":1608617110386,"results":"29","hashOfConfig":"21"},{"size":414,"mtime":1608557397598,"results":"30","hashOfConfig":"21"},{"size":1110,"mtime":1608635321926,"results":"31","hashOfConfig":"21"},{"size":771,"mtime":1608628134160,"results":"32","hashOfConfig":"21"},{"size":1691,"mtime":1608619841108,"results":"33","hashOfConfig":"21"},{"size":362,"mtime":1608621852135,"results":"34","hashOfConfig":"21"},{"size":1198,"mtime":1608625719592,"results":"35","hashOfConfig":"21"},{"size":204,"mtime":1608635903273,"results":"36","hashOfConfig":"21"},{"size":793,"mtime":1608637493447,"results":"37","hashOfConfig":"21"},{"size":4970,"mtime":1608637546366,"results":"38","hashOfConfig":"21"},{"size":454,"mtime":1608637829508,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"5ms0i",{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"E:\\react-apps\\expense_tracker\\src\\index.js",[],"E:\\react-apps\\expense_tracker\\src\\App.js",["80"],"E:\\react-apps\\expense_tracker\\src\\components\\Details\\Details.jsx",[],["81","82"],"E:\\react-apps\\expense_tracker\\src\\components\\Details\\styles.js",[],"E:\\react-apps\\expense_tracker\\src\\styles.js",[],"E:\\react-apps\\expense_tracker\\src\\components\\Main\\Main.jsx",[],"E:\\react-apps\\expense_tracker\\src\\components\\Main\\styles.js",[],"E:\\react-apps\\expense_tracker\\src\\components\\Main\\Form\\styles.js",[],"E:\\react-apps\\expense_tracker\\src\\components\\Main\\List\\List.jsx",[],"E:\\react-apps\\expense_tracker\\src\\components\\Main\\List\\styles.js",[],"E:\\react-apps\\expense_tracker\\src\\context\\context.js",[],"E:\\react-apps\\expense_tracker\\src\\context\\contextReducer.js",[],"E:\\react-apps\\expense_tracker\\src\\constants\\categories.js",[],"E:\\react-apps\\expense_tracker\\src\\utils\\formatDate.js",[],"E:\\react-apps\\expense_tracker\\src\\useTransactions.js",[],"E:\\react-apps\\expense_tracker\\src\\components\\SnackBar\\styles.js",[],"E:\\react-apps\\expense_tracker\\src\\components\\SnackBar\\CustomizedSnackbar.jsx",[],"E:\\react-apps\\expense_tracker\\src\\components\\Main\\Form\\NewTransactionForm.jsx",["83"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport { TextField, Typography, Grid, Button, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport { useSpeechContext } from '@speechly/react-client';\r\nimport CustomizedSnackbar from '../../SnackBar/CustomizedSnackbar';\r\nimport formatDate from '../../../utils/formatDate';\r\nimport { ExpenseTrackerContext } from '../../../context/context';\r\nimport { incomeCategories, expenseCategories } from '../../../constants/categories';\r\nimport useStyles from './styles';\r\n\r\nconst initialState = {\r\n  amount: '',\r\n  category: '',\r\n  type: 'Income',\r\n  date: formatDate(new Date()),\r\n};\r\n\r\nconst NewTransactionForm = () => {\r\n  const classes = useStyles();\r\n  const { addTransaction } = useContext(ExpenseTrackerContext);\r\n  const [formData, setFormData] = useState(initialState);\r\n  const { segment } = useSpeechContext();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const createTransaction = () => {\r\n    if (Number.isNaN(Number(formData.amount)) || !formData.date.includes('-')) return;\r\n\r\n    if (incomeCategories.map((iC) => iC.type).includes(formData.category)) {\r\n      setFormData({ ...formData, type: 'Income' });\r\n    } else if (expenseCategories.map((iC) => iC.type).includes(formData.category)) {\r\n      setFormData({ ...formData, type: 'Expense' });\r\n    }\r\n\r\n    setOpen(true);\r\n    addTransaction({ ...formData, amount: Number(formData.amount), id: uuidv4() });\r\n    setFormData(initialState);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (segment) {\r\n      if (segment.intent.intent === 'add_expense') {\r\n        setFormData({ ...formData, type: 'Expense' });\r\n      } else if (segment.intent.intent === 'add_income') {\r\n        setFormData({ ...formData, type: 'Income' });\r\n      } else if (segment.isFinal && segment.intent.intent === 'create_transaction') {\r\n        return createTransaction();\r\n      } else if (segment.isFinal && segment.intent.intent === 'cancel_transaction') {\r\n        return setFormData(initialState);\r\n      }\r\n\r\n      segment.entities.forEach((s) => {\r\n        const category = `${s.value.charAt(0)}${s.value.slice(1).toLowerCase()}`;\r\n\r\n        switch (s.type) {\r\n          case 'amount':\r\n            setFormData({ ...formData, amount: s.value });\r\n            break;\r\n          case 'category':\r\n            if (incomeCategories.map((iC) => iC.type).includes(category)) {\r\n              setFormData({ ...formData, type: 'Income', category });\r\n            } else if (expenseCategories.map((iC) => iC.type).includes(category)) {\r\n              setFormData({ ...formData, type: 'Expense', category });\r\n            }\r\n            break;\r\n          case 'date':\r\n            setFormData({ ...formData, date: s.value });\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      });\r\n\r\n      if (segment.isFinal && formData.amount && formData.category && formData.type && formData.date) {\r\n        createTransaction();\r\n      }\r\n    }\r\n  }, [segment]);\r\n\r\n  const selectedCategories = formData.type === 'Income' ? incomeCategories : expenseCategories;\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <CustomizedSnackbar open={open} setOpen={setOpen} />\r\n      <Grid item xs={12}>\r\n        <Typography align=\"center\" variant=\"subtitle2\" gutterBottom>\r\n        {segment ? (\r\n        <div className=\"segment\">\r\n          {segment.words.map((w) => w.value).join(\" \")}\r\n        </div>\r\n      ) : null}\r\n         {/* {isSpeaking ? <BigTranscript /> : 'Start adding transactions'}  */}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <FormControl fullWidth>\r\n          <InputLabel>Type</InputLabel>\r\n          <Select value={formData.type} onChange={(e) => setFormData({ ...formData, type: e.target.value })}>\r\n            <MenuItem value=\"Income\">Income</MenuItem>\r\n            <MenuItem value=\"Expense\">Expense</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <FormControl fullWidth>\r\n          <InputLabel>Category</InputLabel>\r\n          <Select value={formData.category} onChange={(e) => setFormData({ ...formData, category: e.target.value })}>\r\n            {selectedCategories.map((c) => <MenuItem key={c.type} value={c.type}>{c.type}</MenuItem>)}\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField type=\"number\" label=\"Amount\" value={formData.amount} onChange={(e) => setFormData({ ...formData, amount: e.target.value })} fullWidth />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField fullWidth label=\"Date\" type=\"date\" value={formData.date} onChange={(e) => setFormData({ ...formData, date: formatDate(e.target.value) })} />\r\n      </Grid>\r\n      <Button className={classes.button} variant=\"outlined\" color=\"primary\" fullWidth onClick={createTransaction}>Create</Button>\r\n    </Grid>\r\n  );\r\n};\r\nexport default NewTransactionForm;","E:\\react-apps\\expense_tracker\\src\\components\\InfoCard.jsx",[],{"ruleId":"84","severity":1,"message":"85","line":12,"column":11,"nodeType":"86","messageId":"87","endLine":12,"endColumn":15},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":78,"column":6,"nodeType":"94","endLine":78,"endColumn":15,"suggestions":"95"},"no-unused-vars","'main' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["96"],"no-negated-in-lhs",["97"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'createTransaction' and 'formData'. Either include them or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.","ArrayExpression",["98"],"no-global-assign","no-unsafe-negation",{"desc":"99","fix":"100"},"Update the dependencies array to be: [createTransaction, formData, segment]",{"range":"101","text":"102"},[3026,3035],"[createTransaction, formData, segment]"]